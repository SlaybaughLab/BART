// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: material.proto

#include "material.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_material_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_material_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Material_MatrixProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_material_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Material_ScalarProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_material_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Material_VectorProperty;
}  // namespace protobuf_material_2eproto
class Material_ScalarPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Material_ScalarProperty>
      _instance;
} _Material_ScalarProperty_default_instance_;
class Material_VectorPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Material_VectorProperty>
      _instance;
} _Material_VectorProperty_default_instance_;
class Material_MatrixPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Material_MatrixProperty>
      _instance;
} _Material_MatrixProperty_default_instance_;
class MaterialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Material>
      _instance;
} _Material_default_instance_;
namespace protobuf_material_2eproto {
static void InitDefaultsMaterial_ScalarProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Material_ScalarProperty_default_instance_;
    new (ptr) ::Material_ScalarProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Material_ScalarProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Material_ScalarProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMaterial_ScalarProperty}, {}};

static void InitDefaultsMaterial_VectorProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Material_VectorProperty_default_instance_;
    new (ptr) ::Material_VectorProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Material_VectorProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Material_VectorProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMaterial_VectorProperty}, {}};

static void InitDefaultsMaterial_MatrixProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Material_MatrixProperty_default_instance_;
    new (ptr) ::Material_MatrixProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Material_MatrixProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Material_MatrixProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMaterial_MatrixProperty}, {}};

static void InitDefaultsMaterial() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Material_default_instance_;
    new (ptr) ::Material();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Material::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Material =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMaterial}, {
      &protobuf_material_2eproto::scc_info_Material_ScalarProperty.base,
      &protobuf_material_2eproto::scc_info_Material_VectorProperty.base,
      &protobuf_material_2eproto::scc_info_Material_MatrixProperty.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Material_ScalarProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Material_VectorProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Material_MatrixProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Material.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_ScalarProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_ScalarProperty, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_ScalarProperty, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_VectorProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_VectorProperty, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_VectorProperty, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_MatrixProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_MatrixProperty, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_MatrixProperty, rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_MatrixProperty, cols_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material_MatrixProperty, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material, full_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material, abbreviation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material, number_of_groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material, thermal_groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material, scalar_property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material, vector_property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Material, matrix_property_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Material_ScalarProperty)},
  { 7, -1, sizeof(::Material_VectorProperty)},
  { 14, -1, sizeof(::Material_MatrixProperty)},
  { 23, -1, sizeof(::Material)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Material_ScalarProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Material_VectorProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Material_MatrixProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Material_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "material.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016material.proto\"\307\005\n\010Material\022\021\n\tfull_na"
      "me\030\001 \001(\t\022\024\n\014abbreviation\030\002 \001(\t\022\n\n\002id\030\003 \001"
      "(\t\022\030\n\020number_of_groups\030\004 \001(\r\022\026\n\016thermal_"
      "groups\030\005 \001(\r\0221\n\017scalar_property\030\006 \003(\0132\030."
      "Material.ScalarProperty\0221\n\017vector_proper"
      "ty\030\007 \003(\0132\030.Material.VectorProperty\0221\n\017ma"
      "trix_property\030\010 \003(\0132\030.Material.MatrixPro"
      "perty\032\?\n\016ScalarProperty\022\036\n\002id\030\001 \001(\0162\022.Ma"
      "terial.ScalarId\022\r\n\005value\030\002 \001(\001\032C\n\016Vector"
      "Property\022\036\n\002id\030\001 \001(\0162\022.Material.VectorId"
      "\022\021\n\005value\030\002 \003(\001B\002\020\001\032_\n\016MatrixProperty\022\036\n"
      "\002id\030\001 \001(\0162\022.Material.MatrixId\022\014\n\004rows\030\002 "
      "\001(\r\022\014\n\004cols\030\003 \001(\r\022\021\n\005value\030\004 \003(\001B\002\020\001\"+\n\010"
      "ScalarId\022\022\n\016UNKNOWN_SCALAR\020\000\022\013\n\007DENSITY\020"
      "\001\"z\n\010VectorId\022\022\n\016UNKNOWN_VECTOR\020\000\022\021\n\rENE"
      "RGY_GROUPS\020\001\022\007\n\003CHI\020\002\022\013\n\007SIGMA_T\020\003\022\013\n\007SI"
      "GMA_A\020\004\022\014\n\010NU_SIG_F\020\005\022\017\n\013KAPPA_SIG_F\020\006\022\005"
      "\n\001Q\020\007\"+\n\010MatrixId\022\022\n\016UNKNOWN_MATRIX\020\000\022\013\n"
      "\007SIGMA_S\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 738);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "material.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_material_2eproto
const ::google::protobuf::EnumDescriptor* Material_ScalarId_descriptor() {
  protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_material_2eproto::file_level_enum_descriptors[0];
}
bool Material_ScalarId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Material_ScalarId Material::UNKNOWN_SCALAR;
const Material_ScalarId Material::DENSITY;
const Material_ScalarId Material::ScalarId_MIN;
const Material_ScalarId Material::ScalarId_MAX;
const int Material::ScalarId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Material_VectorId_descriptor() {
  protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_material_2eproto::file_level_enum_descriptors[1];
}
bool Material_VectorId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Material_VectorId Material::UNKNOWN_VECTOR;
const Material_VectorId Material::ENERGY_GROUPS;
const Material_VectorId Material::CHI;
const Material_VectorId Material::SIGMA_T;
const Material_VectorId Material::SIGMA_A;
const Material_VectorId Material::NU_SIG_F;
const Material_VectorId Material::KAPPA_SIG_F;
const Material_VectorId Material::Q;
const Material_VectorId Material::VectorId_MIN;
const Material_VectorId Material::VectorId_MAX;
const int Material::VectorId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Material_MatrixId_descriptor() {
  protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_material_2eproto::file_level_enum_descriptors[2];
}
bool Material_MatrixId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Material_MatrixId Material::UNKNOWN_MATRIX;
const Material_MatrixId Material::SIGMA_S;
const Material_MatrixId Material::MatrixId_MIN;
const Material_MatrixId Material::MatrixId_MAX;
const int Material::MatrixId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Material_ScalarProperty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Material_ScalarProperty::kIdFieldNumber;
const int Material_ScalarProperty::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Material_ScalarProperty::Material_ScalarProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_material_2eproto::scc_info_Material_ScalarProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Material.ScalarProperty)
}
Material_ScalarProperty::Material_ScalarProperty(const Material_ScalarProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&value_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:Material.ScalarProperty)
}

void Material_ScalarProperty::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&value_)) + sizeof(id_));
}

Material_ScalarProperty::~Material_ScalarProperty() {
  // @@protoc_insertion_point(destructor:Material.ScalarProperty)
  SharedDtor();
}

void Material_ScalarProperty::SharedDtor() {
}

void Material_ScalarProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Material_ScalarProperty::descriptor() {
  ::protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_material_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Material_ScalarProperty& Material_ScalarProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_material_2eproto::scc_info_Material_ScalarProperty.base);
  return *internal_default_instance();
}


void Material_ScalarProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:Material.ScalarProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&value_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool Material_ScalarProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Material.ScalarProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Material.ScalarId id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::Material_ScalarId >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Material.ScalarProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Material.ScalarProperty)
  return false;
#undef DO_
}

void Material_ScalarProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Material.ScalarProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Material.ScalarId id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Material.ScalarProperty)
}

::google::protobuf::uint8* Material_ScalarProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Material.ScalarProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Material.ScalarId id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Material.ScalarProperty)
  return target;
}

size_t Material_ScalarProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Material.ScalarProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  // .Material.ScalarId id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Material_ScalarProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Material.ScalarProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const Material_ScalarProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Material_ScalarProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Material.ScalarProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Material.ScalarProperty)
    MergeFrom(*source);
  }
}

void Material_ScalarProperty::MergeFrom(const Material_ScalarProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Material.ScalarProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Material_ScalarProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Material.ScalarProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Material_ScalarProperty::CopyFrom(const Material_ScalarProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Material.ScalarProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Material_ScalarProperty::IsInitialized() const {
  return true;
}

void Material_ScalarProperty::Swap(Material_ScalarProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Material_ScalarProperty::InternalSwap(Material_ScalarProperty* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Material_ScalarProperty::GetMetadata() const {
  protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_material_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Material_VectorProperty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Material_VectorProperty::kIdFieldNumber;
const int Material_VectorProperty::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Material_VectorProperty::Material_VectorProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_material_2eproto::scc_info_Material_VectorProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Material.VectorProperty)
}
Material_VectorProperty::Material_VectorProperty(const Material_VectorProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:Material.VectorProperty)
}

void Material_VectorProperty::SharedCtor() {
  id_ = 0;
}

Material_VectorProperty::~Material_VectorProperty() {
  // @@protoc_insertion_point(destructor:Material.VectorProperty)
  SharedDtor();
}

void Material_VectorProperty::SharedDtor() {
}

void Material_VectorProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Material_VectorProperty::descriptor() {
  ::protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_material_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Material_VectorProperty& Material_VectorProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_material_2eproto::scc_info_Material_VectorProperty.base);
  return *internal_default_instance();
}


void Material_VectorProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:Material.VectorProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  id_ = 0;
  _internal_metadata_.Clear();
}

bool Material_VectorProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Material.VectorProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Material.VectorId id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::Material_VectorId >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double value = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Material.VectorProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Material.VectorProperty)
  return false;
#undef DO_
}

void Material_VectorProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Material.VectorProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Material.VectorId id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // repeated double value = 2 [packed = true];
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->value().data(), this->value_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Material.VectorProperty)
}

::google::protobuf::uint8* Material_VectorProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Material.VectorProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Material.VectorId id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // repeated double value = 2 [packed = true];
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->value_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Material.VectorProperty)
  return target;
}

size_t Material_VectorProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Material.VectorProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double value = 2 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .Material.VectorId id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Material_VectorProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Material.VectorProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const Material_VectorProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Material_VectorProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Material.VectorProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Material.VectorProperty)
    MergeFrom(*source);
  }
}

void Material_VectorProperty::MergeFrom(const Material_VectorProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Material.VectorProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Material_VectorProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Material.VectorProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Material_VectorProperty::CopyFrom(const Material_VectorProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Material.VectorProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Material_VectorProperty::IsInitialized() const {
  return true;
}

void Material_VectorProperty::Swap(Material_VectorProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Material_VectorProperty::InternalSwap(Material_VectorProperty* other) {
  using std::swap;
  value_.InternalSwap(&other->value_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Material_VectorProperty::GetMetadata() const {
  protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_material_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Material_MatrixProperty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Material_MatrixProperty::kIdFieldNumber;
const int Material_MatrixProperty::kRowsFieldNumber;
const int Material_MatrixProperty::kColsFieldNumber;
const int Material_MatrixProperty::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Material_MatrixProperty::Material_MatrixProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_material_2eproto::scc_info_Material_MatrixProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Material.MatrixProperty)
}
Material_MatrixProperty::Material_MatrixProperty(const Material_MatrixProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cols_) -
    reinterpret_cast<char*>(&id_)) + sizeof(cols_));
  // @@protoc_insertion_point(copy_constructor:Material.MatrixProperty)
}

void Material_MatrixProperty::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cols_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cols_));
}

Material_MatrixProperty::~Material_MatrixProperty() {
  // @@protoc_insertion_point(destructor:Material.MatrixProperty)
  SharedDtor();
}

void Material_MatrixProperty::SharedDtor() {
}

void Material_MatrixProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Material_MatrixProperty::descriptor() {
  ::protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_material_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Material_MatrixProperty& Material_MatrixProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_material_2eproto::scc_info_Material_MatrixProperty.base);
  return *internal_default_instance();
}


void Material_MatrixProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:Material.MatrixProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cols_) -
      reinterpret_cast<char*>(&id_)) + sizeof(cols_));
  _internal_metadata_.Clear();
}

bool Material_MatrixProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Material.MatrixProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Material.MatrixId id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_id(static_cast< ::Material_MatrixId >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rows = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cols = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cols_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double value = 4 [packed = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_value())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 34u, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Material.MatrixProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Material.MatrixProperty)
  return false;
#undef DO_
}

void Material_MatrixProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Material.MatrixProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Material.MatrixId id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->id(), output);
  }

  // uint32 rows = 2;
  if (this->rows() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rows(), output);
  }

  // uint32 cols = 3;
  if (this->cols() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cols(), output);
  }

  // repeated double value = 4 [packed = true];
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->value().data(), this->value_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Material.MatrixProperty)
}

::google::protobuf::uint8* Material_MatrixProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Material.MatrixProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Material.MatrixId id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->id(), target);
  }

  // uint32 rows = 2;
  if (this->rows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rows(), target);
  }

  // uint32 cols = 3;
  if (this->cols() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cols(), target);
  }

  // repeated double value = 4 [packed = true];
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->value_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Material.MatrixProperty)
  return target;
}

size_t Material_MatrixProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Material.MatrixProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double value = 4 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .Material.MatrixId id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  // uint32 rows = 2;
  if (this->rows() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rows());
  }

  // uint32 cols = 3;
  if (this->cols() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cols());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Material_MatrixProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Material.MatrixProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const Material_MatrixProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Material_MatrixProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Material.MatrixProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Material.MatrixProperty)
    MergeFrom(*source);
  }
}

void Material_MatrixProperty::MergeFrom(const Material_MatrixProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Material.MatrixProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.rows() != 0) {
    set_rows(from.rows());
  }
  if (from.cols() != 0) {
    set_cols(from.cols());
  }
}

void Material_MatrixProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Material.MatrixProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Material_MatrixProperty::CopyFrom(const Material_MatrixProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Material.MatrixProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Material_MatrixProperty::IsInitialized() const {
  return true;
}

void Material_MatrixProperty::Swap(Material_MatrixProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Material_MatrixProperty::InternalSwap(Material_MatrixProperty* other) {
  using std::swap;
  value_.InternalSwap(&other->value_);
  swap(id_, other->id_);
  swap(rows_, other->rows_);
  swap(cols_, other->cols_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Material_MatrixProperty::GetMetadata() const {
  protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_material_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Material::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Material::kFullNameFieldNumber;
const int Material::kAbbreviationFieldNumber;
const int Material::kIdFieldNumber;
const int Material::kNumberOfGroupsFieldNumber;
const int Material::kThermalGroupsFieldNumber;
const int Material::kScalarPropertyFieldNumber;
const int Material::kVectorPropertyFieldNumber;
const int Material::kMatrixPropertyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Material::Material()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_material_2eproto::scc_info_Material.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Material)
}
Material::Material(const Material& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scalar_property_(from.scalar_property_),
      vector_property_(from.vector_property_),
      matrix_property_(from.matrix_property_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.full_name().size() > 0) {
    full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
  }
  abbreviation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.abbreviation().size() > 0) {
    abbreviation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.abbreviation_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&number_of_groups_, &from.number_of_groups_,
    static_cast<size_t>(reinterpret_cast<char*>(&thermal_groups_) -
    reinterpret_cast<char*>(&number_of_groups_)) + sizeof(thermal_groups_));
  // @@protoc_insertion_point(copy_constructor:Material)
}

void Material::SharedCtor() {
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abbreviation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_of_groups_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thermal_groups_) -
      reinterpret_cast<char*>(&number_of_groups_)) + sizeof(thermal_groups_));
}

Material::~Material() {
  // @@protoc_insertion_point(destructor:Material)
  SharedDtor();
}

void Material::SharedDtor() {
  full_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abbreviation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Material::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Material::descriptor() {
  ::protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_material_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Material& Material::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_material_2eproto::scc_info_Material.base);
  return *internal_default_instance();
}


void Material::Clear() {
// @@protoc_insertion_point(message_clear_start:Material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scalar_property_.Clear();
  vector_property_.Clear();
  matrix_property_.Clear();
  full_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abbreviation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_of_groups_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&thermal_groups_) -
      reinterpret_cast<char*>(&number_of_groups_)) + sizeof(thermal_groups_));
  _internal_metadata_.Clear();
}

bool Material::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Material)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string full_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->full_name().data(), static_cast<int>(this->full_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Material.full_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string abbreviation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_abbreviation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->abbreviation().data(), static_cast<int>(this->abbreviation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Material.abbreviation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Material.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 number_of_groups = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_of_groups_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 thermal_groups = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thermal_groups_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Material.ScalarProperty scalar_property = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_scalar_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Material.VectorProperty vector_property = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vector_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Material.MatrixProperty matrix_property = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_matrix_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Material)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Material)
  return false;
#undef DO_
}

void Material::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string full_name = 1;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Material.full_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->full_name(), output);
  }

  // string abbreviation = 2;
  if (this->abbreviation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->abbreviation().data(), static_cast<int>(this->abbreviation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Material.abbreviation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->abbreviation(), output);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Material.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  // uint32 number_of_groups = 4;
  if (this->number_of_groups() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->number_of_groups(), output);
  }

  // uint32 thermal_groups = 5;
  if (this->thermal_groups() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->thermal_groups(), output);
  }

  // repeated .Material.ScalarProperty scalar_property = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scalar_property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->scalar_property(static_cast<int>(i)),
      output);
  }

  // repeated .Material.VectorProperty vector_property = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vector_property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->vector_property(static_cast<int>(i)),
      output);
  }

  // repeated .Material.MatrixProperty matrix_property = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matrix_property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->matrix_property(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Material)
}

::google::protobuf::uint8* Material::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string full_name = 1;
  if (this->full_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Material.full_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->full_name(), target);
  }

  // string abbreviation = 2;
  if (this->abbreviation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->abbreviation().data(), static_cast<int>(this->abbreviation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Material.abbreviation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->abbreviation(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Material.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  // uint32 number_of_groups = 4;
  if (this->number_of_groups() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->number_of_groups(), target);
  }

  // uint32 thermal_groups = 5;
  if (this->thermal_groups() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->thermal_groups(), target);
  }

  // repeated .Material.ScalarProperty scalar_property = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scalar_property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->scalar_property(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Material.VectorProperty vector_property = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vector_property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->vector_property(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Material.MatrixProperty matrix_property = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->matrix_property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->matrix_property(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Material)
  return target;
}

size_t Material::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Material)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Material.ScalarProperty scalar_property = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->scalar_property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->scalar_property(static_cast<int>(i)));
    }
  }

  // repeated .Material.VectorProperty vector_property = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->vector_property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vector_property(static_cast<int>(i)));
    }
  }

  // repeated .Material.MatrixProperty matrix_property = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->matrix_property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->matrix_property(static_cast<int>(i)));
    }
  }

  // string full_name = 1;
  if (this->full_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->full_name());
  }

  // string abbreviation = 2;
  if (this->abbreviation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->abbreviation());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // uint32 number_of_groups = 4;
  if (this->number_of_groups() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number_of_groups());
  }

  // uint32 thermal_groups = 5;
  if (this->thermal_groups() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->thermal_groups());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Material::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Material)
  GOOGLE_DCHECK_NE(&from, this);
  const Material* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Material>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Material)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Material)
    MergeFrom(*source);
  }
}

void Material::MergeFrom(const Material& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Material)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scalar_property_.MergeFrom(from.scalar_property_);
  vector_property_.MergeFrom(from.vector_property_);
  matrix_property_.MergeFrom(from.matrix_property_);
  if (from.full_name().size() > 0) {

    full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
  }
  if (from.abbreviation().size() > 0) {

    abbreviation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.abbreviation_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.number_of_groups() != 0) {
    set_number_of_groups(from.number_of_groups());
  }
  if (from.thermal_groups() != 0) {
    set_thermal_groups(from.thermal_groups());
  }
}

void Material::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Material::CopyFrom(const Material& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Material::IsInitialized() const {
  return true;
}

void Material::Swap(Material* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Material::InternalSwap(Material* other) {
  using std::swap;
  CastToBase(&scalar_property_)->InternalSwap(CastToBase(&other->scalar_property_));
  CastToBase(&vector_property_)->InternalSwap(CastToBase(&other->vector_property_));
  CastToBase(&matrix_property_)->InternalSwap(CastToBase(&other->matrix_property_));
  full_name_.Swap(&other->full_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  abbreviation_.Swap(&other->abbreviation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(number_of_groups_, other->number_of_groups_);
  swap(thermal_groups_, other->thermal_groups_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Material::GetMetadata() const {
  protobuf_material_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_material_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Material_ScalarProperty* Arena::CreateMaybeMessage< ::Material_ScalarProperty >(Arena* arena) {
  return Arena::CreateInternal< ::Material_ScalarProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Material_VectorProperty* Arena::CreateMaybeMessage< ::Material_VectorProperty >(Arena* arena) {
  return Arena::CreateInternal< ::Material_VectorProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Material_MatrixProperty* Arena::CreateMaybeMessage< ::Material_MatrixProperty >(Arena* arena) {
  return Arena::CreateInternal< ::Material_MatrixProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Material* Arena::CreateMaybeMessage< ::Material >(Arena* arena) {
  return Arena::CreateInternal< ::Material >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
